{"version":3,"file":"static/js/321.ae180a1d.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__UyU4S\",\"dialogsItems\":\"Dialogs_dialogsItems__t0DnP\",\"active\":\"Dialogs_active__kXTae\",\"messages\":\"Dialogs_messages__N435u\",\"message\":\"Dialogs_message__9mcQr\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem=(props)=>{\r\n    let path=\"/dialogs/\" + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n    <NavLink to={path}>{props.name}</NavLink>\r\n</div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message=(props) => {\r\n\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {required, maxLengthCreator,} from \"../../utils/vilidators/validators\";\r\n\r\n\r\nconst Dialogs=(props) => {\r\n\r\n    let state=props.messagesPage;\r\n\r\n    let dialogsElements=state.dialogData.map((el) => <DialogItem name={el.name} key={el.id} id={el.id}/>);\r\n    let messagesElements=state.messagesData.map((el) => <Message message={el.message} key={el.id}/>);\r\n\r\n    let newMessageBody=state.newDialogText;\r\n\r\n\r\n    let addNewMessage=(values)=>{\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n      if (!props.isAuth) {return <Navigate to=\"/login\"/>;}\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n              {dialogsElements}\r\n            </div>\r\n           <div className={s.messages}>\r\n               <div>{messagesElements}</div>\r\n\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\nconst maxLength50=maxLengthCreator(50);\r\nconst AddMessageForm=(props)=>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMessageBody\"}\r\n                       placeholder={\"Enter your message\"} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux=reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispathToProps=(dispatch)=>{\r\n    return {\r\n        sendMessage: (newMessageBody)=>{dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n            }\r\n}\r\nconst DialogsContainer=\r\ncompose(\r\n    connect(mapStateToProps,mapDispathToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n//let AuthRedirectComponent=withAuthRedirect(Dialogs);\r\n\r\n//const DialogsContainer=connect(mapStateToProps,mapDispathToProps)(AuthRedirectComponent);\r\n\r\nexport default DialogsContainer;","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect=(state)=>({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect=(Componenet)=>{\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n                if (!this.props.isAuth) return <Navigate to='/login'/>;\r\n\r\n                return <Componenet {...this.props} />\r\n            }\r\n        }\r\n\r\n\r\n let ConnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","path","id","_jsx","className","s","children","NavLink","to","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","messagesPage","dialogsElements","dialogData","map","el","DialogItem","messagesElements","messagesData","Message","newDialogText","isAuth","values","sendMessage","newMessageBody","Navigate","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Componenet","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","React"],"sourceRoot":""}