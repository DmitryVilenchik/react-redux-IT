{"version":3,"file":"static/js/239.cc322216.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","webpack://my-app/./src/components/Profile/Profileinfo/Profileinfo.module.css?e2a6","components/Profile/Profileinfo/ProfileStatus.js","components/Profile/Profileinfo/ProfileStatusWithHooks.js","components/Profile/Profileinfo/Profileinfo.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/Wroute.js","components/Profile/ProfileContainer.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__li8eF\",\"posts\":\"MyPosts_posts__s50NC\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__0Ws-G\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post=(props)=>{\r\n  //console.log(props.message);\r\n  //debugger;\r\n    return (      \r\n        <div className={s.item}>\r\n          <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXQ6I7mPbttUzHkoGqV77RTA9RHhw9mUJu5g&usqp=CAU'></img>\r\n          {props.message}\r\n          <div>\r\n          <span>\r\n            {props.likesCount}\r\n          </span>\r\n          </div>\r\n        </div>      \r\n    ); \r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/vilidators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n//import {addPostActionCreator} from './../../../redux/profile-reducer';\r\n//import {updateNewPostTextActionCreator} from './../../../redux/profile-reducer';\r\n\r\nconst MyPosts=(props) => {\r\n\r\n    let postsItems = props.postsData.map((el) => <Post message={el.message} key={el.id}\r\n                                                       likesCount={el.likesCount}/>)\r\n    let newPostElement = React.createRef();\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        //let text: string=newPostElement.current.value;\r\n        //props.dispatch(addPostActionCreator());\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Post</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsItems}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength=maxLengthCreator(10);\r\n\r\nlet addNewPostForm=(props)=>{\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name={\"newPostText\"} placeholder={\"Text message\"}\r\n            validate={[required, maxLength]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n   )\r\n}\r\n\r\nlet AddNewPostFormRedux=reduxForm({form: \"ProfileAddNewPostForm\"})(addNewPostForm);\r\nexport default MyPosts;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"Profileinfo_descriptionBlock__IwdU-\"};","import React from \"react\";\r\nimport s from './Profileinfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state={\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode=()=> {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode=()=> {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChainge=(e)=> {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n\r\n    }\r\n    componentDidUpdate=(prevProps, prevState)=> {\r\n        if (prevProps.status!==this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                    {!this.state.editMode &&\r\n                <div>\r\n                    <span onClick={this.activateEditMode}>{this.props.status || \"--------\"}</span>\r\n                </div>\r\n                    }\r\n                    {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChainge} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n                    }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ProfileStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport s from './Profileinfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks=(props)=>{\r\n    let [editMode, setEditMode]=useState(false);\r\n    let [status, setStatus]=useState(props.status);\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    //let stateWithSetState=useState(true);\r\n    //let editMode=stateWithSetState[0];\r\n    //let setEditMode=stateWithSetState[1];\r\n\r\n    const activateEditMode=()=>{\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode=()=> {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChainge=(e)=> {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n        return (\r\n            <div>\r\n                    { !editMode &&\r\n                <div>\r\n                    <span onClick={activateEditMode}>{props.status || \"--------\"}</span>\r\n                </div>\r\n                    }\r\n                    {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChainge}\r\n                           autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n                    }\r\n            </div>\r\n        );\r\n\r\n}\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\n\r\nimport s from './Profileinfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo=(props)=>{\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n    <div>\r\n    <div>\r\n\r\n    </div>\r\n    <div className={s.descriptionBlock}>\r\n\r\n        <img src={props.profile.photos.large}/>\r\n    < ProfileStatusWithHooks status={props.status} updateStatus={props.updateSatus}/>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\n//import s from './MyPosts.module.css';\r\n//import Post from \"./Post/Post\";\r\nimport {addPostActionCreator} from './../../../redux/profile-reducer';\r\n//import {updateNewPostTextActionCreator} from './../../../redux/profile-reducer';\r\nimport MyPosts from \"./MyPosts\";\r\n//import StoreContext from \"../../../StoreContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//const MyPostsContainer=(props)=>{\r\n//    return (\r\n//        <StoreContext.Consumer>\r\n//            {(store)=> {\r\n//                let state=store.getState();\r\n//                let addPost=()=> {\r\n//                    store.dispatch(addPostActionCreator());\r\n\r\n\r\n//                }\r\n//                let onPostChange=(text)=>{\r\n//                    let action=updateNewPostTextActionCreator(text);\r\n//                    store.dispatch(action);\r\n//                }\r\n//                return <MyPosts updateNewPostText={onPostChange} addPost={addPost}\r\n//                                postsData={store.getState().profilePage.postsData}\r\n//                                newPostText={store.getState().profilePage.newPostText}/>\r\n//            }\r\n//        }\r\n//        </StoreContext.Consumer>\r\n//    );\r\n//}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispathToProps=(dispatch)=>{\r\n    return {\r\n\r\n        addPost: (newPostText)=>{dispatch(addPostActionCreator(newPostText));\r\n\r\n        }\r\n    }\r\n\r\n}\r\nconst MyPostsContainer=connect(mapStateToProps, mapDispathToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./Profileinfo/Profileinfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile=(props)=>{\r\n\r\n  return (\r\n    <div>\r\n    <ProfileInfo profile={props.profile} status={props.status} updateSatus={props.updateStatus}/>\r\n    <MyPostsContainer />\r\n    </div>    \r\n    ); \r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {useParams} from \"react-router-dom\"\r\n\r\nconst withRouter=(Component)=>{\r\n    return(props)=>{\r\n\r\n        const match  = {params: useParams()};\r\n        return <Component {...props}  match = {match}/>\r\n    }\r\n}\r\n\r\nexport default withRouter;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\n//import axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\"\r\nimport withRouter from \"./Wroute\";\r\n//import {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n//import {usersAPI} from \"../../api/api\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n   let userId=this.props.match.params.userId;\r\n\r\n    if (!userId)  { userId= this.props.authorizedUserId;\r\n      if (!userId) {\r\n        //this.props.history.push(\"/login\");\r\n\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n\r\n  return (\r\n    <Profile {...this.props}\r\n             profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n}\r\n}\r\n\r\nlet mapStateToProps=(state)=>{\r\n    //console.log(\"map to state props PROFILE\");\r\n    return ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth })\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)(ProfileContainer);\r\n\r\n//let AuthRedirectComponent=withAuthRedirect(ProfileContainer);\r\n\r\n\r\n\r\n//let withUrlDataContainerComponent=withRouter(AuthRedirectComponent);\r\n//export default connect(mapStateToProps, {getUserProfile}) (withUrlDataContainerComponent);","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect=(state)=>({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect=(Componenet)=>{\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n                if (!this.props.isAuth) return <Navigate to='/login'/>;\r\n\r\n                return <Componenet {...this.props} />\r\n            }\r\n        }\r\n\r\n\r\n let ConnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","_jsxs","className","s","children","_jsx","src","message","likesCount","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","postsItems","postsData","map","el","Post","id","values","addPost","newPostText","React","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","ProfileStatusWithHooks","updateSatus","Preloader","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","Component","match","params","useParams","_objectSpread","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","authorizedUserId","getUserProfile","getStatus","Profile","compose","auth","isAuth","withRouter","mapStateToPropsForRedirect","withAuthRedirect","Componenet","RedirectComponent","Navigate","to"],"sourceRoot":""}